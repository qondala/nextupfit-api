services:
  db:
    image: postgres:16
    restart: always
    container_name: nextupfit-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - PGUSER=${PGUSER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
      - PGDATA=${PGDATA}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/db-exists.sh:/usr/bin/db-exists.sh
      - ./docker/postgres/create-database.sh:/usr/bin/create-database.sh
      - ./docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - nextupfit-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nextupfit-api
    env_file:
      - .env
    ports:
      - '3000:3000'
    depends_on:
      db:
        condition: service_healthy
      flyway:
        condition: service_started
    volumes:
      - .:/usr/app
    networks:
      - nextupfit-network

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: nextupfit-pgadmin
    env_file:
      - .env
    ports:
      - '5050:80'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - nextupfit-network

  flyway:
    build:
      context: .
      dockerfile: docker/flyway/Dockerfile
    container_name: nextupfit-flyway
    env_file:
      - .env
    volumes:
      - ./migrations:/flyway/sql
    depends_on:
      db:
        condition: service_healthy
    networks:
      - nextupfit-network

  redis:
    image: redis:latest
    restart: always
    container_name: nextupfit-redis
    ports:
      - "2389:6379"
    expose:
      - "6379"
    command: [ "redis-server", "/redis.conf" ]
    volumes:
      - ./docker/redis/redis.conf:/redis.conf

  nginx:
    image: nginx:alpine
    container_name: nextupfit-nginx
    volumes:
      - postgres-data:/usr/share/nginx/html
      - ./docker/ngnix/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - '80:80'
    depends_on:
      - app
    networks:
      - nextupfit-network


networks:
  nextupfit-network:
    driver: bridge

volumes:
  postgres-data:
  nginx-data:

